// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MsAcceso.Infrastructure;

#nullable disable

namespace MsAcceso.Infrastructure.Migrations.AppDb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MsAcceso.Domain.Root.Auditorias.Auditoria", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accion")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ValorActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorAnterior")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("auditorias", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Licencias.Licencia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PermiteCrearUsuarios")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("licencias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ecbdebff-cb86-4e74-bd12-f7fbfc165dfb"),
                            Activo = true,
                            Nombre = "ENTERPRISE",
                            PermiteCrearUsuarios = true
                        },
                        new
                        {
                            Id = new Guid("1a9e887b-aa55-49b8-b9bc-4d7ba609d065"),
                            Activo = true,
                            Nombre = "PROFESIONAL",
                            PermiteCrearUsuarios = false
                        },
                        new
                        {
                            Id = new Guid("e88a6456-3941-4136-b172-7a0d5167c7fc"),
                            Activo = true,
                            Nombre = "ESTUDIANTE",
                            PermiteCrearUsuarios = false
                        });
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.MenuOpciones.MenuOpcion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MenusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OpcionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("TieneUrl")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenusId");

                    b.HasIndex("OpcionesId");

                    b.ToTable("menus_opciones", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Opciones.Opcion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Icono")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tooltip")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("opciones", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Parametros.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Dependencia")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Nivel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Valor")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Dependencia");

                    b.ToTable("parametros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "ESTADO DE SOLICITUDES"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE PERSONA"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Dependencia = 2,
                            Nivel = 1,
                            Nombre = "NATURAL",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Dependencia = 2,
                            Nivel = 1,
                            Nombre = "JURIDICA",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE ASUNTO"
                        },
                        new
                        {
                            Id = 6,
                            Abreviatura = "DNI",
                            Activo = true,
                            Dependencia = 3,
                            Nivel = 2,
                            Nombre = "DOCUMENTO NACIONAL DE IDENTIDAD",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 7,
                            Abreviatura = "RUC",
                            Activo = true,
                            Dependencia = 4,
                            Nivel = 2,
                            Nombre = "REGISTRO UNICO DE CONTRIBUYENTES",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 8,
                            Abreviatura = "CE",
                            Activo = true,
                            Dependencia = 3,
                            Nivel = 2,
                            Nombre = "CARNET DE EXTRANJERIA",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE ROL"
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Dependencia = 9,
                            Nivel = 1,
                            Nombre = "LICENCIA",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Dependencia = 9,
                            Nivel = 1,
                            Nombre = "ADMINISTRADOR",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "PERIODO DE LICENCIAS"
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            Dependencia = 12,
                            Nivel = 1,
                            Nombre = "1 MES",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            Dependencia = 12,
                            Nivel = 1,
                            Nombre = "6 MESES",
                            Valor = "6"
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            Dependencia = 12,
                            Nivel = 1,
                            Nombre = "12 MESES",
                            Valor = "12"
                        },
                        new
                        {
                            Id = 16,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE IDENTIFICADOR SGO"
                        },
                        new
                        {
                            Id = 17,
                            Activo = true,
                            Dependencia = 16,
                            Nivel = 1,
                            Nombre = "CLIENTE",
                            Valor = "0"
                        },
                        new
                        {
                            Id = 18,
                            Activo = true,
                            Dependencia = 16,
                            Nivel = 1,
                            Nombre = "PROVEEDOR",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 19,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE RECURSO"
                        },
                        new
                        {
                            Id = 20,
                            Activo = true,
                            Dependencia = 19,
                            Nivel = 1,
                            Nombre = "MANO DE OBRA",
                            Valor = "0"
                        },
                        new
                        {
                            Id = 21,
                            Activo = true,
                            Dependencia = 19,
                            Nivel = 1,
                            Nombre = "SERVICIO",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 22,
                            Activo = true,
                            Dependencia = 19,
                            Nivel = 1,
                            Nombre = "MATERIALES",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 23,
                            Activo = true,
                            Dependencia = 19,
                            Nivel = 1,
                            Nombre = "CONTRATO",
                            Valor = "3"
                        },
                        new
                        {
                            Id = 24,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "UBIGEO"
                        },
                        new
                        {
                            Id = 25,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Amazonas"
                        },
                        new
                        {
                            Id = 26,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Áncash"
                        },
                        new
                        {
                            Id = 27,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Apurímac"
                        },
                        new
                        {
                            Id = 28,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Arequipa"
                        },
                        new
                        {
                            Id = 29,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Ayacucho"
                        },
                        new
                        {
                            Id = 30,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Cajamarca"
                        },
                        new
                        {
                            Id = 31,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Callao"
                        },
                        new
                        {
                            Id = 32,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Cusco"
                        },
                        new
                        {
                            Id = 33,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Huancavelica"
                        },
                        new
                        {
                            Id = 34,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Huánuco"
                        },
                        new
                        {
                            Id = 35,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Ica"
                        },
                        new
                        {
                            Id = 36,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Junín"
                        },
                        new
                        {
                            Id = 37,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "La Libertad"
                        },
                        new
                        {
                            Id = 38,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Lambayeque"
                        },
                        new
                        {
                            Id = 39,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Lima"
                        },
                        new
                        {
                            Id = 40,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Loreto"
                        },
                        new
                        {
                            Id = 41,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Madre de Dios"
                        },
                        new
                        {
                            Id = 42,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Moquegua"
                        },
                        new
                        {
                            Id = 43,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Pasco"
                        },
                        new
                        {
                            Id = 44,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Piura"
                        },
                        new
                        {
                            Id = 45,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Puno"
                        },
                        new
                        {
                            Id = 46,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "San Martín"
                        },
                        new
                        {
                            Id = 47,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Tacna"
                        },
                        new
                        {
                            Id = 48,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Tumbes"
                        },
                        new
                        {
                            Id = 49,
                            Activo = true,
                            Dependencia = 24,
                            Nivel = 1,
                            Nombre = "Ucayali"
                        },
                        new
                        {
                            Id = 50,
                            Activo = true,
                            Dependencia = 49,
                            Nivel = 2,
                            Nombre = "Coronel Portillo"
                        },
                        new
                        {
                            Id = 51,
                            Activo = true,
                            Dependencia = 49,
                            Nivel = 2,
                            Nombre = "Atalaya"
                        },
                        new
                        {
                            Id = 52,
                            Activo = true,
                            Dependencia = 49,
                            Nivel = 2,
                            Nombre = "Padre Abad"
                        },
                        new
                        {
                            Id = 53,
                            Activo = true,
                            Dependencia = 49,
                            Nivel = 2,
                            Nombre = "Purús"
                        },
                        new
                        {
                            Id = 54,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Callería"
                        },
                        new
                        {
                            Id = 55,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Campoverde"
                        },
                        new
                        {
                            Id = 56,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Iparía"
                        },
                        new
                        {
                            Id = 57,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Masisea"
                        },
                        new
                        {
                            Id = 58,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Yarinacocha"
                        },
                        new
                        {
                            Id = 59,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Nueva Requena"
                        },
                        new
                        {
                            Id = 60,
                            Activo = true,
                            Dependencia = 50,
                            Nivel = 3,
                            Nombre = "Manantay"
                        },
                        new
                        {
                            Id = 61,
                            Activo = true,
                            Dependencia = 51,
                            Nivel = 3,
                            Nombre = "Raymondi"
                        },
                        new
                        {
                            Id = 62,
                            Activo = true,
                            Dependencia = 51,
                            Nivel = 3,
                            Nombre = "Sepahua"
                        },
                        new
                        {
                            Id = 63,
                            Activo = true,
                            Dependencia = 51,
                            Nivel = 3,
                            Nombre = "Tahuanía"
                        },
                        new
                        {
                            Id = 64,
                            Activo = true,
                            Dependencia = 51,
                            Nivel = 3,
                            Nombre = "Yurúa"
                        },
                        new
                        {
                            Id = 65,
                            Activo = true,
                            Dependencia = 52,
                            Nivel = 3,
                            Nombre = "Padre Abad"
                        },
                        new
                        {
                            Id = 66,
                            Activo = true,
                            Dependencia = 52,
                            Nivel = 3,
                            Nombre = "Irázola"
                        },
                        new
                        {
                            Id = 67,
                            Activo = true,
                            Dependencia = 52,
                            Nivel = 3,
                            Nombre = "Curimana"
                        },
                        new
                        {
                            Id = 68,
                            Activo = true,
                            Dependencia = 53,
                            Nivel = 3,
                            Nombre = "Purús"
                        });
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Personas.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoId");

                    b.ToTable("personas", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.PersonasJuridicas.PersonaJuridica", b =>
                {
                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersonaId");

                    b.ToTable("personas_juridicas", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.PersonasNaturales.PersonaNatural", b =>
                {
                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("PersonaId");

                    b.ToTable("personas_naturales", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.RolPermisos.RolPermiso", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("rols_permisos", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.RolPermisosOpciones.RolPermisoOpcion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OpcionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RolPermisoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OpcionId");

                    b.HasIndex("RolPermisoId");

                    b.ToTable("rols_permisos_opciones", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Rols.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LicenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TipoRolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LicenciaId");

                    b.HasIndex("TipoRolId");

                    b.ToTable("rols", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Sesiones.Sesion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("JwtToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("sesiones", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Sistemas.Sistema", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Dependencia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Orden")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Dependencia");

                    b.ToTable("sistemas", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("RolId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.UsuarioLicencias.UsuarioLicencia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LicenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PeriodoLicenciaId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LicenciaId");

                    b.HasIndex("PeriodoLicenciaId");

                    b.HasIndex("UserId");

                    b.ToTable("usuario_licencia", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.MenuOpciones.MenuOpcion", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Sistemas.Sistema", "Menu")
                        .WithMany("MenuOpcions")
                        .HasForeignKey("MenusId");

                    b.HasOne("MsAcceso.Domain.Root.Opciones.Opcion", "Opcion")
                        .WithMany()
                        .HasForeignKey("OpcionesId");

                    b.Navigation("Menu");

                    b.Navigation("Opcion");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Parametros.Parametro", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", null)
                        .WithMany()
                        .HasForeignKey("Dependencia");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Personas.Persona", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Tipo");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.PersonasJuridicas.PersonaJuridica", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Personas.Persona", null)
                        .WithOne("PersonaJuridica")
                        .HasForeignKey("MsAcceso.Domain.Root.PersonasJuridicas.PersonaJuridica", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.PersonasNaturales.PersonaNatural", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Personas.Persona", null)
                        .WithOne("PersonaNatural")
                        .HasForeignKey("MsAcceso.Domain.Root.PersonasNaturales.PersonaNatural", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.RolPermisos.RolPermiso", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Sistemas.Sistema", "Menu")
                        .WithMany("RolPermisos")
                        .HasForeignKey("MenuId");

                    b.HasOne("MsAcceso.Domain.Root.Rols.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolId");

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.RolPermisosOpciones.RolPermisoOpcion", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Opciones.Opcion", "Opcion")
                        .WithMany("RolPermisoOpcions")
                        .HasForeignKey("OpcionId");

                    b.HasOne("MsAcceso.Domain.Root.RolPermisos.RolPermiso", "RolPermiso")
                        .WithMany("RolPermisoOpcions")
                        .HasForeignKey("RolPermisoId");

                    b.Navigation("Opcion");

                    b.Navigation("RolPermiso");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Rols.Rol", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Licencias.Licencia", "Licencia")
                        .WithMany()
                        .HasForeignKey("LicenciaId");

                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "TipoRol")
                        .WithMany()
                        .HasForeignKey("TipoRolId");

                    b.Navigation("Licencia");

                    b.Navigation("TipoRol");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Sistemas.Sistema", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Sistemas.Sistema", "DependenciaModel")
                        .WithMany("Sistemas")
                        .HasForeignKey("Dependencia");

                    b.Navigation("DependenciaModel");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Users.User", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Personas.Persona", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("MsAcceso.Domain.Root.Rols.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("Empresa");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.UsuarioLicencias.UsuarioLicencia", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Licencias.Licencia", "Licencia")
                        .WithMany()
                        .HasForeignKey("LicenciaId");

                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "PeriodoLicencia")
                        .WithMany()
                        .HasForeignKey("PeriodoLicenciaId");

                    b.HasOne("MsAcceso.Domain.Root.Users.User", "User")
                        .WithMany("UsuarioLicencias")
                        .HasForeignKey("UserId");

                    b.Navigation("Licencia");

                    b.Navigation("PeriodoLicencia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Opciones.Opcion", b =>
                {
                    b.Navigation("RolPermisoOpcions");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Personas.Persona", b =>
                {
                    b.Navigation("PersonaJuridica");

                    b.Navigation("PersonaNatural");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.RolPermisos.RolPermiso", b =>
                {
                    b.Navigation("RolPermisoOpcions");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Rols.Rol", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Sistemas.Sistema", b =>
                {
                    b.Navigation("MenuOpcions");

                    b.Navigation("RolPermisos");

                    b.Navigation("Sistemas");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Users.User", b =>
                {
                    b.Navigation("UsuarioLicencias");
                });
#pragma warning restore 612, 618
        }
    }
}
