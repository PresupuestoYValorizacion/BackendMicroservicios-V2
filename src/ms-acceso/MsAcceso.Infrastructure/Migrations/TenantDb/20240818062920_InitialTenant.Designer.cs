// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MsAcceso.Infrastructure.Tenants;

#nullable disable

namespace MsAcceso.Infrastructure.Migrations.TenantDb
{
    [DbContext(typeof(TenantDbContext))]
    [Migration("20240818062920_InitialTenant")]
    partial class InitialTenant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MsAcceso.Domain.Root.Parametros.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Dependencia")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Nivel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Valor")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Dependencia");

                    b.ToTable("parametros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPOS DE DOCUMENTO"
                        },
                        new
                        {
                            Id = 2,
                            Abreviatura = "DNI",
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "DOCUMENTO NACIONAL DE IDENTIDAD",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 3,
                            Abreviatura = "RUC",
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "REGISTRO UNICO DE CONTRIBUYENTES",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 4,
                            Abreviatura = "CE",
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "CARNET DE EXTRANJERIA",
                            Valor = "3"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "ESTADO DE SOLICITUDES"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE PERSONA"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Dependencia = 6,
                            Nivel = 1,
                            Nombre = "NATURAL",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Dependencia = 6,
                            Nivel = 1,
                            Nombre = "JURIDICA",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "TIPO DE ASUNTO"
                        });
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Personas.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoId");

                    b.ToTable("personas", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Parametros.Parametro", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", null)
                        .WithMany()
                        .HasForeignKey("Dependencia");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Personas.Persona", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.HasOne("MsAcceso.Domain.Root.Parametros.Parametro", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Tipo");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("MsAcceso.Domain.Root.Users.User", b =>
                {
                    b.HasOne("MsAcceso.Domain.Root.Personas.Persona", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
